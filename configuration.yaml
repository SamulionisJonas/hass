homeassistant:
    name: Namai
    country: LT
    packages: !include_dir_named include
    external_url: 'https://home.jsam.dev'
    allowlist_external_dirs:
        - /config

http:
    use_x_forwarded_for: true
    trusted_proxies:
        - 172.30.33.0/24

# Loads default set of integrations. Do not remove.
default_config:

frontend:
    extra_module_url:
        - /hacsfiles/lovelace-card-mod/card-mod.js
    themes: !include_dir_merge_named themes

template: !include sidebar.yaml

lovelace:
    mode: yaml
    resources:
        - url: /hacsfiles/apexcharts-card/apexcharts-card.js
          type: module
        - url: /hacsfiles/bar-card/bar-card.js
          type: module
        - url: /hacsfiles/button-card/button-card.js
          type: module
        - url: /hacsfiles/custom-icons/custom-icons.js
          type: module
        - url: /hacsfiles/kiosk-mode/kiosk-mode.js
          type: module
        - url: /hacsfiles/lovelace-layout-card/layout-card.js
          type: module
        - url: /hacsfiles/weather-card/weather-card.js
          type: module
        - url: /hacsfiles/lovelace-more-info-card/more-info-card.js
          type: module
        - url: /hacsfiles/lovelace-mushroom/mushroom.js
          type: module
        - url: /hacsfiles/lovelace-slider-entity-row/slider-entity-row.js
          type: module
        - url: /hacsfiles/lovelace-xiaomi-vacuum-map-card/xiaomi-vacuum-map-card.js
          type: module
        - url: /hacsfiles/swipe-card/swipe-card.js
          type: module
        - url: /hacsfiles/tabbed-card/tabbed-card.js
          type: module
        - url: /hacsfiles/frigate-hass-card/frigate-hass-card.js
          type: module
        - url: /local/fonts.css?v=2.1
          type: css

logger:
    default: warning
    logs:
        homeassistant.components.websocket_api: fatal
        custom_components.monitor_docker.helpers: error
        homeassistant.setup: error
        nordpool: debug
        custom_components.nordpool: debug
        custom_components.nordpool.sensor: debug
        custom_components.nordpool.aio_price: debug

sensor:
    - platform: nordpool
      region: 'LT'
      currency: 'EUR'
      VAT: True
      precision: 3
      low_price_cutoff: 0.95
      price_in_cents: false
      price_type: kWh
      additional_costs: |
          {% set s = {
              "day_night_switch_hour": 23,
              "night_rate": 0.04719,
              "day_rate": 0.07865,
              "cert": 0.01
          }
          %}

          {% if now().hour >= s.day_night_switch_hour or now().weekday() in [5, 6] %}
              {{ s.night_rate + s.cert | float }}
          {% else %}
              {{ s.day_rate + s.cert | float }}
          {% endif %}

    - platform: time_date
      display_options:
          - 'time'
          - 'date'
          - 'date_time'
          - 'date_time_utc'
          - 'date_time_iso'
          - 'time_date'
          - 'time_utc'
          - 'beat'

command_line:
    - sensor:
          name: External Server CPU Load
          command: 'ssh jonas@192.168.8.189 ''cat /proc/loadavg | awk "{print $1}"'''
          unit_of_measurement: '%'
          value_template: '{{ value | round(1) }}'
          scan_interval: 300

    - sensor:
          name: External Server Last Boot
          command: "ssh jonas@192.168.8.189 'who -b'"
          scan_interval: 300
          value_template: >
              {% set boot_info = value | replace('\n', '') %}
              {% set boot_datetime = as_datetime(boot_info) %}
              {{ (now() - boot_datetime).humanize() }}

    - sensor:
          name: External Disk Temperature
          command: "ssh jonas@192.168.8.189 'sudo smartctl -a /dev/sda | grep Temperature_Celsius | awk \"{print \\$10}\"'"
          unit_of_measurement: '°C'
          scan_interval: 300

    - sensor:
          name: External Free RAM
          command: "ssh jonas@192.168.8.189 'free -m | awk \\'/Mem:/ {print \\$4}\\''"
          unit_of_measurement: 'MB'
          scan_interval: 300

person:
    - name: Jonas
      id: jonas
      device_trackers:
          - device_tracker.jonas_iphone

waste_collection_schedule:
    sources:
        - name: ics
          args:
              url: 'https://calendar.google.com/calendar/ical/9q0rl9qhk652miktp665pc8l5k%40group.calendar.google.com/public/basic.ics'
          customize:
              - type: A1
                alias: Buitinės atliekos
              - type: B1
                alias: Popieriaus, plastiko, metalo pakuotės atliekos
              - type: C1
                alias: Stiklo pakuotės atliekos
          calendar_title: WASTE COLLECTION

# Text to speech
tts:
    - platform: google_translate

# Cover for Homekit - Garage
cover:
    - platform: template
      covers:
          garage_door:
              device_class: garage
              friendly_name: 'Garage Door'
              value_template: >-
                  {% if is_state('binary_sensor.shelly_garage_door_external_input','on') %}
                    Open
                  {% else %}
                    Closed
                  {% endif %}
              open_cover:
                  service: >-
                      {% if is_state('binary_sensor.shelly_garage_door_external_input','on') %}switch.turn_off{%else%}switch.turn_on{%endif%}
                  data:
                      entity_id: switch.home_garage
              close_cover:
                  service: >-
                      {% if is_state('binary_sensor.shelly_garage_door_external_input','on') %}switch.turn_on{%else%}switch.turn_off{%endif%}
                  data:
                      entity_id: switch.home_garage
              stop_cover:
                  service: switch.turn_on
                  data:
                      entity_id: switch.home_garage
              icon_template: >-
                  {% if is_state('binary_sensor.shelly_garage_door_external_input','on') %}
                    mdi:garage-open
                  {% else %}
                    mdi:garage
                  {% endif %}
          outdoor_gates:
              device_class: garage
              friendly_name: 'Outdoor gates'
              value_template: >-
                  {% if is_state('binary_sensor.shellyplus1_7c87ce63c130_input','on') %}
                    Open
                  {% else %}
                    Closed
                  {% endif %}
              open_cover:
                  service: >-
                      {% if is_state('binary_sensor.shellyplus1_7c87ce63c130_input','on') %}switch.turn_off{%else%}switch.turn_on{%endif%}
                  data:
                      entity_id: switch.outdoor_gates
              close_cover:
                  service: >-
                      {% if is_state('binary_sensor.shellyplus1_7c87ce63c130_input','on') %}switch.turn_on{%else%}switch.turn_off{%endif%}
                  data:
                      entity_id: switch.outdoor_gates
              stop_cover:
                  service: switch.turn_on
                  data:
                      entity_id: switch.outdoor_gates
              icon_template: >-
                  {% if is_state('binary_sensor.shellyplus1_7c87ce63c130_input','on') %}
                    mdi:garage-open
                  {% else %}
                    mdi:garage
                  {% endif %}

binary_sensor:
    - platform: template
      sensors:
          garage_gates_combined:
              friendly_name: 'Garage Gates Combined'
              value_template: "{{ is_state('binary_sensor.garage_gate1', 'off') and is_state('binary_sensor.garage_gate2', 'off') }}"

script: !include scripts.yaml
automation: !include automations.yaml
scene: !include scenes.yaml
