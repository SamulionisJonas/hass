- sensor:
      - unique_id: sidebar
        state: template
        attributes:
            time: >
                {% set hours = now().strftime('%H') %}
                {% set minutes = now().strftime('%M') %}
                <span class="time">
                  {{ hours }}<span class="time-colon">:</span>{{ minutes }}
                </span>
            date: >
                <font color='#6a7377'><b>
                {% if strptime(states('sensor.date'), '%Y-%m-%d').day != None %}
                {% set days = ['Pirmadienis', 'Antradienis', 'Trečiadienis', 'Ketvirtadienis', 'Penktadienis', 'Šeštadienis', 'Sekmadienis'] %}
                {% set months = ['Sausio', 'Vasario', 'Kovo', 'Balandžio', 'Gegužės', 'Birželio',
                'Liepos', 'Rugpjūčio', 'Rugsėjo', 'Spalio', 'Lapkričio', 'Gruodžio'] %}
                  {{ days[now().weekday()] }}<br>
                  {{ months[now().month-1] }} {{ strptime(states('sensor.date'), '%Y-%m-%d').day }} diena
                {% endif %}
                </b></font>
            greet: >
                <b>
                {% set time = now().hour %}
                {% if time <= 1 %} Labos nakties {{'\U0001F611'}}
                {% elif time <= 3 %} Labos nakties {{'\U0001F62A'}}
                {% elif time <= 5 %} Labos nakties {{'\U0001F634'}}
                {% elif time <= 7 %} Labas rytas {{'\U0001F4A9'}}
                {% elif time <= 9 %} Labas rytas {{'\u2615\uFE0F'}}
                {% elif time <= 10 %} Labas rytas {{'\U0001F642'}}
                {% elif time <= 13 %} Laba diena {{'\U0001F60A'}}
                {% elif time <= 15 %} Laba diena {{'\U0001F60E'}}
                {% elif time <= 17 %} Labas vakaras {{'\U0001F44B\U0001F3FB'}}
                {% elif time <= 18 %} Labas vakaras {{'\U0001F44B\U0001F3FB'}}
                {% elif time <= 22 %} Labas vakaras {{'\U0001F60C'}}
                {% elif time <= 23 %} Labas vakaras {{'\U0001F974'}}
                {% else %} Labas vakaras {{'\U0001F974'}}
                {% endif %}
                </b>
            active: >
                <b>
                {% set lights = [
                  states.light.forest_side,
                  states.light.terrasse
                ] %}

                {% set devices = [
                  states.media_player.samsung_tv
                ] %}

                {% set lights_on = lights | selectattr('state','eq','on') | list %}
                {% set lights_name = lights | selectattr('state','eq','on') | map(attribute='name') | join(', ') %}

                {% set devices_on = devices | selectattr('state','search','(on|cool|fan_only|playing)') | list %}
                {% set devices_name = devices_on | map(attribute='name') | join(', ') %}

                {% if (lights_on | length == 0) and (devices_on | length > 0) %}
                  {{ devices_name | regex_replace(',([^,]*)$',' ir \\1') }} įjungti

                {% elif (lights_on | length == 1) and (devices_on | length == 1) %}
                  {{ lights_name }} ir {{devices_name }} įjungti

                {% elif (lights_on | length == 1) and (devices_on | length > 1) %}
                  {{ lights_name }}, {{ devices_name | regex_replace(',([^,]*)$',' ir\\1') }} įjungti

                {% elif (lights_on | length > 1) and (devices_on | length == 1) %}
                  {{ lights_on | length }} lempos ir {{ devices_name }} įjungtos

                {% elif (lights_on | length > 1) and (devices_on | length > 1) %}
                  {{ lights_on | length }} lampor, {{ devices_name | regex_replace(',([^,]*)$',' ir\\1') }} įjungtos

                {% elif (lights_on | length == 1) and (devices_on | length == 0) %}
                  {{ lights_name }} įjungtos

                {% elif (lights_on | length > 1) and (devices_on | length == 0) %}
                  {{ lights_on | length }} lempos įjungtos

                {% else %}
                  <font color='#6a7377'>Viskas išjungta</font>
                {% endif %}
                </b>
            mailbox: >
                {% set mailbox = states('sensor.mailbox') %}
                {% if mailbox | int(default=0) > 0 %}
                  {{ '\U0001F4EC' }} <font color='#6a7377'><b>Brevlåda ({{ mailbox }})</b></font>
                {% endif %}
            vacuum: >
                {% set entity_id = 'vacuum.roborock_s7' %}
                {% if is_state(entity_id, 'cleaning') %}
                  <b>Morty dammsuger</b>
                {% elif is_state(entity_id, 'returning') %}
                  <b>Morty är färdig</b>
                {% endif %}
            weather: >
                {% set entity = 'weather.openweathermap' %}
                {% if not is_state(entity, 'unknown') %}
                  {% set temp = state_attr(entity, 'temperature') | round %}
                  {% set precip = state_attr(entity, 'forecast')[0]['precipitation'] | round %}
                    Jaučiasi kaip {{ temp }}°, {{ 'kritulių nenusimato' if precip == 0
                    else "nusimato " + precip | string + 'mm kritulių \u2614\uFE0F' }}
                {% else %}
                  Nepavyko įkelti orų...
                {% endif %}
            laundry: >
                {% set start_time = state_attr('calendar.tvatta', 'start_time') %}
                {% if start_time != None %}
                  {% set time = as_timestamp(start_time) | timestamp_custom('%H:%M') %}
                  {% set hours = as_timestamp(start_time) | timestamp_custom('%H') | int(default=0) / 24 %}
                  {% set count = (as_timestamp(start_time) - as_timestamp(now())) / 86400 - hours %}
                  {% set day = strptime(start_time, '%Y-%m-%d %H:%M:%S').strftime('%A')
                  | replace('Monday', 'Måndag')
                  | replace('Tuesday', 'Tisdag')
                  | replace('Wednesday', 'Onsdag')
                  | replace('Thursday', 'Torsdag')
                  | replace('Friday', 'Fredag')
                  | replace('Saturday', 'Lördag')
                  | replace('Sunday', 'Söndag') %}
                  {% if count <= 0.0 %}
                    {{'\U0001F4A6'}} Tvätt idag {{ time }}
                  {% elif count <= 1.0 %}
                    Tvätt imorgon klockan {{ time }}
                  {% elif count <= 2.0 %}
                    Tvätt i övermorgon klockan {{ time }}
                  {% else %}
                    Tvätt om {{ (count + hours) | round }} dagar på {{ day }} kl {{ time }}
                  {% endif %}
                {% endif %}
            battery: >
                {% set entities = states.sensor
                  | selectattr('entity_id', 'search', 'battery')
                  | rejectattr('entity_id', 'search', 'iphone')
                  | rejectattr('entity_id', 'search', 'ipad')  # Add this line to exclude iPad
                  | map(attribute = 'entity_id') | list %}
                {% for sensor in entities if states(sensor) != 'unknown' and states(sensor) !=
                  'unavailable' and states(sensor) != 'None' and states(sensor) | int(default=0) <= 5 %}
                  Baterija {% if loop.first %} {{'\u26A0\uFE0F'}} {% else %}, {% endif %}
                  {{ state_attr(sensor, 'friendly_name') }} {{ states(sensor) }}%
                {% endfor %}
